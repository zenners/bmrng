<div class="session_start">
  <%= image_tag('upload_cloud.png') %>
  <h1>UPLOAD PHOTOS</h1>
  <h4>Found at: <a href="<%= @album.url %>"><%= @album.url %></a></h4>
  <br>
  <div>
    Boomerang does not currently offer an in-app watermarking function. We'd
    like to leave this feature up to the photographer (for now) to ensure that
    photos are marked to their liking pre-upload. Also, we've set a limit of
    10mb per file upload to help us keep image quality high and fast for
    anyone viewing your work. Thanks!
  </div>
  <br>
  <br>
  <div class="complete">
    <%= link_to "Upload Complete!", user_path(@album.user) %>
  </div>
  <%= form_for(Photo.new, html: { multipart: true, class: 'dropzone'}) do |f|  %>
        <%= f.hidden_field :user_id, :value => current_user.id %>
        <%= f.hidden_field :album_id, :value => @album.id %>
    <div class="fallback">
        <%= f.file_field :photo %><br>
        <%= f.submit "Upload" %>
    </div>
  <% end %>
</div>

<script>
    // disable auto discover
    Dropzone.autoDiscover = false;
    // grap our upload form by its id
    $("#new_photo").dropzone({
        // restrict image size to a maximum 10MB
        maxFilesize: 10,
        // changed the passed param to one accepted by
        // our rails app
        paramName: "photo[photo]",
        // show remove links on each image upload
        addRemoveLinks: true,
        // if the upload was successful

        init: function () {
            <% @album.photos.each do |photo| %>
                var id = <%= photo.id %>
                var file = { name: "<%= photo.photo_file_name %>", size: <%= photo.photo_file_size || 0 %>, type: "<%= photo.photo_content_type %>" };
                this.options.addedfile.call(this, file);
                this.options.thumbnail.call(this, file, "<%= photo.photo.url(:medium) %>");
                $(file.previewTemplate).find('.dz-remove').attr('id', id);
            <% end %>
            this.on("complete", function (file) {
                if (this.getUploadingFiles().length === 0 && this.getQueuedFiles().length === 0) {
                    $(".complete").show();
                }
            });
        },

        success: function(file, response){
            // find the remove button link of the uploaded file and give it an id
            // based of the fileID response from the server
            $(file.previewTemplate).find('.dz-remove').attr('id', response.fileID);
            // add the dz-success class (the green tick sign)
            $(file.previewElement).addClass("dz-success");
        },
        //when the remove button is clicked
        removedfile: function(file){
            // grap the id of the uploaded file we set earlier
            var id = $(file.previewTemplate).find('.dz-remove').attr('id');
            if(id == null){
                $(file.previewElement).addClass('hidden');
            }else{
                // make a DELETE ajax request to delete the file
                $.ajax({
                    type: 'DELETE',
                    url: '/photos/' + id,
                    success: function(data){
                        console.log(data.message);
                        $(file.previewElement).addClass('hidden');
                    }
                });
            };
        }
    });
</script>